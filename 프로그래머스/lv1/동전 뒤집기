동전 뒤집기
문제 설명
책상 위에 동전을 일렬로 놓은 뒤 동전은 건드리지 않고 책상 윗면을 손바닥으로 치면 일부 동전들을 뒤집을 수 있습니다. 이때 동전들이 놓인 위치는 변하지 않는다고 가정합니다. 이를 이용한 동전 뒤집기 게임을 진행합니다. 각 참가자들의 책상 위에 같은 수의 동전이 임의의 상태(앞면 또는 뒷면)로 놓여 있습니다. 참가자들은 돌아가면서 한 번씩 자신의 책상을 손바닥으로 쳐서 동전을 뒤집습니다. 가장 먼저 모든 동전을 앞면이 되게 만들거나, 뒷면이 되게 만들면 게임에서 승리합니다.

동전 뒤집기 게임을 대단히 좋아하는 철수는 오랜 연습 끝에 독특한 기술을 터득했습니다. 철수가 습득한 기술은 원하는 위치의 연속된 k개의 동전을 뒤집는 기술입니다. 예를 들어, k=3이고 6개의 동전들이 [뒷면, 앞면, 앞면, 뒷면, 앞면, 앞면]과 같이 놓여 있을 때 철수는 책상을 한 번 쳐서 첫 번째, 두 번째, 세 번째 동전을 뒤집음으로써 동전 상태를 [앞면, 뒷면, 뒷면, 뒷면, 앞면, 앞면]으로 바꿀 수 있습니다. 그런데 너무 오래 연습을 해서 습관이 되어 버렸는지 철수는 항상 연속된 k개의 동전들만 뒤집을 수 있게 되었습니다. 철수가 동전 뒤집기 게임을 할 때, 모든 동전을 동일한 상태로 만들기 위해서 책상을 최소 몇 회 내리쳐야 하는지 알아보려고 합니다.

게임의 시작 전 동전의 상태를 나타내는 정수 배열 coin, 철수가 한번에 뒤집는 동전의 개수를 나타내는 정수 k가 매개변수로 주어집니다. 철수가 모든 동전을 앞면인 상태 또는 뒷면인 상태로 만들기 위해 최소 몇 번 책상을 쳐야 하는지 return 하도록 solution 함수를 완성하세요. 만약, 철수가 모든 동전을 동일한 상태로 만들 수 없다면 -1을 return 합니다.

제한사항
3 ≤ coin의 길이 ≤ 1,000,000
coin의 원소는 0 또는 1이며, 각각 동전의 뒷면과 앞면을 의미합니다.
1 ≤ k ≤ 100
입출력 예
coin	k	result
[0, 1, 1, 0, 1, 1]	3	2
[1, 0, 1]	3	-1
[0, 0, 1, 1, 0, 0]	2	1
입출력 예 설명
입출력 예 #1

책상을 한 번 쳐서 첫 번째, 두 번째, 세 번째 동전을 뒤집은 후, 다시 한 번 책상을 쳐서 두 번째, 세 번째, 네 번째 동전을 뒤집으면 모든 동전이 앞면을 향하게 됩니다. 따라서 2를 return 합니다.
입출력 예 #2

아무리 책상을 쳐도 모든 동전이 같은 상태가 될 수 없습니다. 따라서 -1을 return 합니다.
입출력 예 #3

책상을 한 번 쳐서 세 번째, 네 번째 동전을 뒤집으면 모든 동전이 뒷면을 향하게 됩니다.
